{"version":3,"sources":["containers/resetPassword/ResetPasswordComponent.tsx","containers/resetPassword/index.ts"],"names":["ResetPasswordComponent","_super","props","_this","call","this","handleInputChange","event","target","value","type","checked","name","setState","_a","handleForm","translate","state","emailInput","resetPassword","emailInputError","bind","__extends","prototype","render","classes","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_11__material_ui_core__","container","spacing","item","xs","className","contain","__WEBPACK_IMPORTED_MODULE_4_src_config__","settings","appName","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Paper___default","paper","elevation","style","padding","paddingLeft","paddingRight","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_TextField___default","textField","autoFocus","onChange","helperText","error","trim","label","__WEBPACK_IMPORTED_MODULE_8__material_ui_core_Button___default","onClick","loginPage","variant","color","__WEBPACK_IMPORTED_MODULE_10__material_ui_core_Typography___default","caption","component","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","ownProps","__WEBPACK_IMPORTED_MODULE_5_react_localize_redux__","get","dispatch","__WEBPACK_IMPORTED_MODULE_3_react_router_redux__","emailAddress","__WEBPACK_IMPORTED_MODULE_12_src_store_actions_authorizeActions__","__WEBPACK_IMPORTED_MODULE_9__material_ui_core_styles__","theme","minWidth","marginTop","margin","minHeight","maxWidth","textAlign","display","__WEBPACK_IMPORTED_MODULE_0__ResetPasswordComponent__"],"mappings":"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","file":"static/js/3.1b0583b8.chunk.js","sourcesContent":["// - Import external components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport config from 'src/config'\nimport { getTranslate, getActiveLanguage } from 'react-localize-redux'\n\n// - Material UI\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { Grid } from '@material-ui/core'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport { IResetPasswordComponentProps } from './IResetPasswordComponentProps'\nimport { IResetPasswordComponentState } from './IResetPasswordComponentState'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n\n  },\n  caption: {\n    marginTop: 30\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  }\n})\n\n/**\n * Create component class\n *\n * @export\n * @class ResetPasswordComponent\n * @extends {Component}\n */\nexport class ResetPasswordComponent extends Component<IResetPasswordComponentProps,IResetPasswordComponentState> {\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor (props: IResetPasswordComponentProps) {\n    super(props)\n\n    this.state = {\n      emailInput: '',\n      emailInputError: ''\n\n    }\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n\n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      [name]: value\n    })\n\n  }\n\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n    const {translate} = this.props\n    let error = false\n    if (this.state.emailInput === '') {\n      this.setState({\n        emailInputError: translate!('resetPassword.emailRequiredError')\n      })\n\n      return\n    }\n\n    this.props.resetPassword!(this.state.emailInput)\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render () {\n\n    const {classes, translate} = this.props\n\n    return (\n      <Grid container spacing={24}>\n      <Grid item xs={12} className={classes.contain}>\n\n        <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n        <div className='animate-bottom'>\n          <Paper className={classes.paper} elevation={1}>\n            <div style={{ padding: '48px 40px 36px' }}>\n              <div style={{\n                paddingLeft: '40px',\n                paddingRight: '40px'\n              }}>\n\n                <h2 className='zoomOutLCorner animated g__paper-title'>{translate!('resetPassword.title')}</h2>\n              </div>\n\n              <TextField\n              className={classes.textField}\n              autoFocus\n                onChange={this.handleInputChange}\n                helperText={this.state.emailInputError}\n                error={this.state.emailInputError.trim() !== ''}\n                name='emailInput'\n                label={translate!('resetPassword.emailLabel')}\n                type='email'\n              /><br />\n              <br />\n              <br />\n              <div className='settings__button-box'>\n                <div>\n                  <Button onClick={this.props.loginPage}>{translate!('resetPassword.backButton')}</Button>\n                </div>\n                <div>\n                  <Button variant='raised' color='primary' onClick={this.handleForm}>{translate!('resetPassword.resetPasswordButton')} </Button>\n                </div>\n              </div>\n              <Typography className={classes.caption} variant='caption' component='p'>\n              {translate!('resetPassword.description')}\n          </Typography>\n            </div>\n          </Paper>\n        </div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: Function, ownProps: IResetPasswordComponentProps) => {\n  return {\n    loginPage: () => {\n      dispatch(push('/login'))\n    },\n    resetPassword: (emailAddress: string) => dispatch(authorizeActions.dbResetPassword(emailAddress))\n  }\n}\n\n/**\n * Map state to props\n * @param  {object} state is the obeject from redux store\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapStateToProps = (state: any, ownProps: IResetPasswordComponentProps) => {\n  return {\n    translate: getTranslate(state.get('locale')),\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter<any>(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(ResetPasswordComponent as any) as any)) as typeof ResetPasswordComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/resetPassword/ResetPasswordComponent.tsx","import ResetPasswordComponent from './ResetPasswordComponent'\nexport default ResetPasswordComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/resetPassword/index.ts"],"sourceRoot":""}