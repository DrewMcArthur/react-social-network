{"version":3,"sources":["containers/signup/SignupComponent.tsx","containers/signup/index.ts"],"names":["SignupComponent","_super","props","_this","call","this","handleInputChange","event","target","value","type","checked","name","setState","_a","fullNameInputError","emailInputError","confirmInputError","passwordInputError","checkInputError","handleForm","state","fullNameInput","emailInput","passwordInput","confirmInput","_b","register","translate","error","fullNameCheck","trim","toLowerCase","indexOf","length","__WEBPACK_IMPORTED_MODULE_12_src_api_StringAPI__","isValidEmail","email","password","fullName","bind","__extends","prototype","render","classes","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_13__material_ui_core__","container","spacing","item","xs","className","contain","__WEBPACK_IMPORTED_MODULE_8_src_config__","settings","appName","__WEBPACK_IMPORTED_MODULE_4__material_ui_core_Paper___default","paper","elevation","style","padding","paddingLeft","paddingRight","__WEBPACK_IMPORTED_MODULE_5__material_ui_core_TextField___default","textField","autoFocus","onChange","helperText","label","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Button___default","onClick","loginPage","variant","color","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","ownProps","__WEBPACK_IMPORTED_MODULE_9_react_localize_redux__","get","dispatch","showError","message","__WEBPACK_IMPORTED_MODULE_11_src_store_actions_globalActions__","userRegister","__WEBPACK_IMPORTED_MODULE_10_src_store_actions_authorizeActions__","__WEBPACK_IMPORTED_MODULE_2_react_router_redux__","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_styles__","theme","minWidth","marginTop","margin","minHeight","maxWidth","textAlign","display","__WEBPACK_IMPORTED_MODULE_0__SignupComponent__"],"mappings":"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","file":"static/js/1.2954affe.chunk.js","sourcesContent":["// - Import react components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'react-router-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport config from 'src/config'\nimport { getTranslate, getActiveLanguage } from 'react-localize-redux'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport * as globalActions from 'src/store/actions/globalActions'\n\n// - Import app API\nimport StringAPI from 'src/api/StringAPI'\n\nimport { ISignupComponentProps } from './ISignupComponentProps'\nimport { ISignupComponentState } from './ISignupComponentState'\nimport { UserRegisterModel } from 'src/models/users/userRegisterModel'\nimport { Grid } from '@material-ui/core'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  }\n})\n\n// - Create Signup component class\nexport class SignupComponent extends Component<ISignupComponentProps, ISignupComponentState> {\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor(props: ISignupComponentProps) {\n    super(props)\n\n    this.state = {\n      fullNameInput: '',\n      fullNameInputError: '',\n      emailInput: '',\n      emailInputError: '',\n      passwordInput: '',\n      passwordInputError: '',\n      confirmInput: '',\n      confirmInputError: ''\n    }\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n\n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      [name]: value\n    })\n\n    switch (name) {\n      case 'fullNameInput':\n        this.setState({\n          fullNameInputError: ''\n        })\n        break\n      case 'emailInput':\n        this.setState({\n          emailInputError: ''\n        })\n        break\n      case 'passwordInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n        break\n      case 'confirmInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n        break\n      case 'checkInput':\n        this.setState({\n          checkInputError: ''\n        })\n        break\n      default:\n\n    }\n  }\n\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n\n    const { fullNameInput, emailInput, passwordInput, confirmInput } = this.state\n    const { register, translate } = this.props\n\n    let error = false\n\n    // Validate full name\n    let fullNameCheck = fullNameInput.trim().toLowerCase()\n\n    if (fullNameCheck.indexOf('test') > -1\n      || fullNameCheck.indexOf('demo') > -1\n      || fullNameCheck.indexOf('asd') > -1\n      || fullNameCheck.length < 4) {\n      this.setState({\n        fullNameInputError: translate!('signup.validNameError')\n      })\n      error = true\n    }\n\n    /* Validate email*/\n    if (!StringAPI.isValidEmail(emailInput)) {\n      this.setState({\n        emailInputError: translate!('signup.validEmailError')\n      })\n      error = true\n\n    }\n\n    /* Check password */\n    if (passwordInput === '') {\n      this.setState({\n        passwordInputError: translate!('signup.passwordRequiredError')\n      })\n      error = true\n\n    }\n    if (confirmInput === '') {\n      this.setState({\n        confirmInputError: translate!('signup.confirmRequiredError')\n      })\n      error = true\n\n    } else if (confirmInput !== passwordInput) {\n      this.setState({\n        passwordInputError: translate!('signup.passwordEqualConfirmError'),\n        confirmInputError: translate!('signup.confirmEqualPasswordError')\n      })\n      error = true\n\n    }\n    if (!error) {\n      register!({\n        email: emailInput,\n        password: passwordInput,\n        fullName: fullNameInput\n      })\n    }\n\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render() {\n\n    const { classes, translate } = this.props\n\n    return (\n\n      <Grid container spacing={24}>\n        <Grid item xs={12} className={classes.contain}>\n          <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n          <div className='animate-bottom'>\n            <Paper className={classes.paper} elevation={1} >\n              <div style={{ padding: '48px 40px 36px' }}>\n                <div style={{\n                  paddingLeft: '40px',\n                  paddingRight: '40px'\n                }}>\n\n                  <h2 className='zoomOutLCorner animated g__paper-title'>{translate!('signup.title')}</h2>\n                </div>\n\n                <TextField\n                  className={classes.textField}\n                  autoFocus\n                  onChange={this.handleInputChange}\n                  helperText={this.state.fullNameInputError}\n                  error={this.state.fullNameInputError.trim() !== ''}\n                  name='fullNameInput'\n                  label={translate!('signup.fullNameLabel')}\n                  type='text'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handleInputChange}\n                  helperText={this.state.emailInputError}\n                  error={this.state.emailInputError.trim() !== ''}\n                  name='emailInput'\n                  label={translate!('signup.emailLabel')}\n                  type='email'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handleInputChange}\n                  helperText={this.state.passwordInputError}\n                  error={this.state.passwordInputError.trim() !== ''}\n                  name='passwordInput'\n                  label={translate!('signup.passwordLabel')}\n                  type='password'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handleInputChange}\n                  helperText={this.state.confirmInputError}\n                  error={this.state.confirmInputError.trim() !== ''}\n                  name='confirmInput'\n                  label={translate!('signup.confirmPasswordLabel')}\n                  type='password'\n                /><br />\n                <br />\n                <div className='signup__button-box'>\n                  <div>\n                    <Button onClick={this.props.loginPage}>{translate!('signup.loginButton')}</Button>\n                  </div>\n                  <div>\n                    <Button variant='raised' color='primary' onClick={this.handleForm}>{translate!('signup.createButton')}</Button>\n\n                  </div>\n                </div>\n\n              </div>\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: any, ownProps: ISignupComponentProps) => {\n  return {\n    showError: (message: string) => {\n      dispatch(globalActions.showMessage(message))\n    },\n    register: (userRegister: UserRegisterModel) => {\n      dispatch(authorizeActions.dbSignup(userRegister))\n    },\n    loginPage: () => {\n      dispatch(push('/login'))\n    }\n  }\n}\n\n/**\n * Map state to props\n * @param  {object} state is the obeject from redux store\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapStateToProps = (state: any, ownProps: ISignupComponentProps) => {\n  return {\n    translate: getTranslate(state.get('locale')),\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(SignupComponent as any) as any) as any)\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/signup/SignupComponent.tsx","import SignupComponent from './SignupComponent'\nexport default SignupComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/signup/index.ts"],"sourceRoot":""}