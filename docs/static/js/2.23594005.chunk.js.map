{"version":3,"sources":["containers/setting/SettingComponent.tsx","containers/setting/index.ts"],"names":["SettingComponent","_super","props","_this","call","this","handleInputChange","event","target","value","type","checked","name","setState","_a","passwordInputError","confirmInputError","handleForm","translate","error","state","passwordInput","confirmInput","login","bind","__extends","prototype","render","classes","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","__WEBPACK_IMPORTED_MODULE_11__material_ui_core__","container","spacing","item","xs","className","contain","__WEBPACK_IMPORTED_MODULE_8_src_config__","settings","appName","__WEBPACK_IMPORTED_MODULE_4__material_ui_core_Paper___default","paper","elevation","style","padding","paddingLeft","paddingRight","textAlign","paddingTop","fontSize","fontWeight","lineHeight","margin","__WEBPACK_IMPORTED_MODULE_5__material_ui_core_TextField___default","autoFocus","textField","onChange","helperText","label","trim","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Button___default","onClick","homePage","variant","color","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","ownProps","__WEBPACK_IMPORTED_MODULE_9_react_localize_redux__","get","dispatch","password","__WEBPACK_IMPORTED_MODULE_10_src_store_actions_authorizeActions__","__WEBPACK_IMPORTED_MODULE_3_react_router_redux__","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_styles__","theme","minWidth","marginTop","minHeight","maxWidth","display","__WEBPACK_IMPORTED_MODULE_0__SettingComponent__"],"mappings":"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","file":"static/js/2.23594005.chunk.js","sourcesContent":["// - Import external components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport config from 'src/config'\nimport { getTranslate, getActiveLanguage } from 'react-localize-redux'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport { ISettingComponentProps } from './ISettingComponentProps'\nimport { ISettingComponentState } from './ISettingComponentState'\nimport { Grid } from '@material-ui/core'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  },\n})\n/**\n * Create component class\n *\n * @export\n * @class SettingComponent\n * @extends {Component}\n */\nexport class SettingComponent extends Component<ISettingComponentProps,ISettingComponentState> {\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor (props: ISettingComponentProps) {\n    super(props)\n\n    this.state = {\n      passwordInput: '',\n      passwordInputError: '',\n      confirmInput: '',\n      confirmInputError: ''\n\n    }\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n\n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      [name]: value\n    })\n\n    switch (name) {\n      case 'passwordInput':\n        this.setState({\n          passwordInputError: ''\n        })\n        break\n      case 'confirmInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n\n        break\n      default:\n\n    }\n  }\n\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n    const {translate} = this.props\n    let error = false\n    if (this.state.passwordInput === '') {\n      this.setState({\n        passwordInputError: translate!('changePassword.newPasswordRequiredError')\n      })\n      error = true\n\n    } else if (this.state.confirmInput === '') {\n      this.setState({\n        confirmInputError: translate!('changePassword.confirmPasswordRequiredError')\n      })\n      error = true\n\n    } else if (this.state.confirmInput !== this.state.passwordInput) {\n      this.setState({\n        confirmInputError: translate!('changePassword.confirmPasswordEqualNewPasswordError')\n      })\n      error = true\n\n    }\n\n    if (!error) {\n      this.props.login!(\n        this.state.passwordInput,\n        this.state.confirmInput\n      )\n    }\n\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render () {\n\n    const {classes, translate} = this.props\n\n    return (\n      <Grid container spacing={24}>\n        <Grid item xs={12} className={classes.contain}>\n\n        <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n        <div className='animate-bottom'>\n          <Paper className={classes.paper} elevation={1} >\n            <div style={{ padding: '48px 40px 36px' }}>\n              <div style={{\n                paddingLeft: '40px',\n                paddingRight: '40px'\n              }}>\n\n                <h2 style={{\n                  textAlign: 'left',\n                  paddingTop: '10px',\n                  fontSize: '24px',\n                  fontWeight: 400,\n                  lineHeight: '32px',\n                  margin: 0\n                }} className='zoomOutLCorner animated g__paper-title'>{translate!('changePassword.title')}</h2>\n              </div>\n\n              <TextField\n              autoFocus\n              className={classes.textField}\n                onChange={this.handleInputChange}\n                helperText={this.state.passwordInputError}\n                name='passwordInput'\n                label={translate!('changePassword.newPasswordLabel')}\n                type='password'\n                error={this.state.passwordInputError.trim() !== ''}\n              /><br />\n              <TextField\n              className={classes.textField}\n                onChange={this.handleInputChange}\n                helperText={this.state.confirmInputError}\n                name='confirmInput'\n                label={translate!('changePassword.confirmPasswordLabel')}\n                type='password'\n                error={this.state.confirmInputError.trim() !== ''}\n              /><br />\n              <br />\n              <br />\n              <div className='settings__button-box'>\n                <div>\n                  <Button onClick={this.props.homePage} > {translate!('changePassword.homeButton')} </Button>\n                </div>\n                <div>\n                  <Button variant='raised' color='primary' onClick={this.handleForm}> {translate!('changePassword.changePasswordButton')} </Button>\n\n                </div>\n              </div>\n\n            </div>\n          </Paper>\n        </div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: any, ownProps: ISettingComponentProps) => {\n  return {\n    login: (password: string) => {\n      dispatch(authorizeActions.dbUpdatePassword(password))\n    },\n    homePage: () => {\n      dispatch(push('/'))\n    }\n  }\n}\n\n/**\n * Map state to props\n * @param  {object} state is the obeject from redux store\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapStateToProps = (state: any, ownProps: ISettingComponentProps) => {\n  return {\n    translate: getTranslate(state.get('locale'))\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(SettingComponent as any) as any) as any)\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/setting/SettingComponent.tsx","import SettingComponent from './SettingComponent'\nexport default SettingComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/setting/index.ts"],"sourceRoot":""}